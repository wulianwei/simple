<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.prac.simple.mapper.RoleMapper">
	<resultMap id="BaseResultMap" type="Role">
		<id column="id" jdbcType="VARCHAR" property="id" />
		<result column="name" jdbcType="VARCHAR" property="name" />
		<result column="description" jdbcType="VARCHAR"
			property="description" />
	</resultMap>
	<sql id="Base_Column_List">
		id, name, description
	</sql>
	<select id="selectByPrimaryKey" parameterType="java.lang.String"
		resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from role
		where id = #{id,jdbcType=VARCHAR}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.String">
		delete from role
		where id = #{id,jdbcType=VARCHAR}
	</delete>
	<insert id="insert" parameterType="Role">
		insert into role (id, name,
		description)
		values (#{id,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR},
		#{description,jdbcType=VARCHAR})
	</insert>
	<insert id="insertSelective" parameterType="Role">
		insert into role
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="name != null">
				name,
			</if>
			<if test="description != null">
				description,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=VARCHAR},
			</if>
			<if test="name != null">
				#{name,jdbcType=VARCHAR},
			</if>
			<if test="description != null">
				#{description,jdbcType=VARCHAR},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="Role">
		update role
		<set>
			<if test="name != null">
				name = #{name,jdbcType=VARCHAR},
			</if>
			<if test="description != null">
				description = #{description,jdbcType=VARCHAR},
			</if>
		</set>
		where id = #{id,jdbcType=VARCHAR}
	</update>
	<update id="updateByPrimaryKey" parameterType="Role">
		update role
		set name = #{name,jdbcType=VARCHAR},
		description = #{description,jdbcType=VARCHAR}
		where id = #{id,jdbcType=VARCHAR}
	</update>

	<select id="selectRoleByUserId" parameterType="java.lang.String"
		resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from role r
		where r.id in(
		select ur.role_id from user_role ur where ur.user_id =
		#{userId,jdbcType=VARCHAR}
		)
	</select>
	<select id="selectAllRole" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from role
	</select>
	
	<select id="selectRole" resultMap="BaseResultMap"  parameterType="RoleReq">
		select
		<include refid="Base_Column_List" />
		from role
		<where>
			<if test="name != null and name !=''">
				name like CONCAT('%',#{name,jdbcType = VARCHAR},'%') 
			</if>
		</where>
		<if test="sort != null and sort != ''">
			order by ${sort}
			<if test="order != null and order != ''">
				${order}
			</if>
		</if>
	</select>
</mapper>