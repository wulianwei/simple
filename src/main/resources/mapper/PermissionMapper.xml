<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.org.prac.simple.mapper.PermissionMapper">
	<resultMap id="BaseResultMap" type="Permission">
		<id column="id" jdbcType="VARCHAR" property="id" />
		<result column="pid" jdbcType="VARCHAR" property="pid" />
		<result column="title" jdbcType="VARCHAR" property="title" />
		<result column="type" jdbcType="CHAR" property="type" />
		<result column="url" jdbcType="VARCHAR" property="url" />
		<result column="description" jdbcType="VARCHAR"
			property="description" />
		<result column="orders" jdbcType="INTEGER" property="orders" />
	</resultMap>
	<sql id="Base_Column_List">
		id, pid, title, type, url, description, orders
	</sql>
	<select id="selectByPrimaryKey" parameterType="java.lang.String"
		resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from permission
		where id = #{id,jdbcType=VARCHAR}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.String">
		delete from permission
		where id = #{id,jdbcType=VARCHAR}
	</delete>
	<insert id="insert" parameterType="Permission">
		insert into permission (id, pid, title,
		type, url, description,
		orders)
		values (#{id,jdbcType=VARCHAR}, #{pid,jdbcType=VARCHAR},
		#{title,jdbcType=VARCHAR},
		#{type,jdbcType=CHAR}, #{url,jdbcType=VARCHAR}, #{description,jdbcType=VARCHAR},
		#{orders,jdbcType=INTEGER})
	</insert>
	<insert id="insertSelective" parameterType="Permission">
		insert into permission
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="pid != null">
				pid,
			</if>
			<if test="title != null">
				title,
			</if>
			<if test="type != null">
				type,
			</if>
			<if test="url != null">
				url,
			</if>
			<if test="description != null">
				description,
			</if>
			<if test="orders != null">
				orders,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=VARCHAR},
			</if>
			<if test="pid != null">
				#{pid,jdbcType=VARCHAR},
			</if>
			<if test="title != null">
				#{title,jdbcType=VARCHAR},
			</if>
			<if test="type != null">
				#{type,jdbcType=CHAR},
			</if>
			<if test="url != null">
				#{url,jdbcType=VARCHAR},
			</if>
			<if test="description != null">
				#{description,jdbcType=VARCHAR},
			</if>
			<if test="orders != null">
				#{orders,jdbcType=INTEGER},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective"
		parameterType="Permission">
		update permission
		<set>
			<if test="pid != null">
				pid = #{pid,jdbcType=VARCHAR},
			</if>
			<if test="title != null">
				title = #{title,jdbcType=VARCHAR},
			</if>
			<if test="type != null">
				type = #{type,jdbcType=CHAR},
			</if>
			<if test="url != null">
				url = #{url,jdbcType=VARCHAR},
			</if>
			<if test="description != null">
				description = #{description,jdbcType=VARCHAR},
			</if>
			<if test="orders != null">
				orders = #{orders,jdbcType=INTEGER},
			</if>
		</set>
		where id = #{id,jdbcType=VARCHAR}
	</update>
	<update id="updateByPrimaryKey" parameterType="Permission">
		update permission
		set pid = #{pid,jdbcType=VARCHAR},
		title = #{title,jdbcType=VARCHAR},
		type = #{type,jdbcType=CHAR},
		url = #{url,jdbcType=VARCHAR},
		description = #{description,jdbcType=VARCHAR},
		orders = #{orders,jdbcType=INTEGER}
		where id = #{id,jdbcType=VARCHAR}
	</update>
	<select id="selectPermission" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from permission
	</select>
	<select id="selectRolePermissions" resultType="RolePermission">
		select p.url, r.id roleId
		from role_permission rp
		inner join permission p on rp.permission_id = p.id
		inner join role r on rp.role_id=r.id
	</select>
	<select id="selectPermissionByUserId"
		parameterType="java.lang.String" resultMap="BaseResultMap">
		select distinct p.*
		from permission p
		inner join role_permission rp on rp.permission_id = p.id
		inner join user_role ur on ur.role_id=rp.role_id
		where ur.user_id=#{userId}
	</select>
	<select id="selectPermissionByRoleId"
		parameterType="java.lang.String" resultMap="BaseResultMap">
		select p.*
		from permission p
		inner join role_permission rp on rp.permission_id = p.id
		where rp.role_id=#{roleId}
	</select>
	<select id="selectPermissionByUrl"
		parameterType="java.lang.String" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from permission
		where url=#{url} limit 1
	</select>
	<select id="selectExistPermissionByUrl"
		parameterType="java.lang.String" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from permission
		where url=#{url} and id <![CDATA[<>]]>
		#{id} limit 1
	</select>
	<select id="selectChildrenPermission"
		parameterType="java.lang.String" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from permission
		where pid=#{id}
	</select>
	<delete id="batchDeletePermission" parameterType="list">
		delete from permission where id in
		<foreach collection="list" item="id" open="(" close=")"
			separator=",">
			#{id,jdbcType=INTEGER}
		</foreach>
	</delete>
</mapper>